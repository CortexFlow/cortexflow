name: Build and Deploy

on:
  push:
    branches:
      - main  # O il branch che desideri monitorare per il deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out the repository

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Imposta la versione di Node.js da usare

      - name: Install dependencies
        run: npm install  # Installa le dipendenze del progetto

      - name: Build the project
        run: npm run build  # Costruisce il progetto

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build  # Carica la cartella build come artefatto

  deploy:
    name: Deploy
    needs: build  # Aspetta che il job build sia completato
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out the repository

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build  # Scarica l'artefatto nella cartella build

      - name: Sync files to hosting
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}  # Usa il server FTP dai secrets
          username: ${{ secrets.FTP_USERNAME }}  # Usa il nome utente FTP dai secrets
          password: ${{ secrets.FTP_PASSWORD }}  # Usa la password FTP dai secrets
          port: ${{ secrets.FTP_PORT }} 
          local-dir: build  # Specifica la directory locale da caricare
          server-dir: /www.cortexflow.org  # Specifica la directory remota
          dangerous-clean-slate: true  # Pulisci la directory remota se necessario
